const server=require("http").createServer(),options={cors:!0,origins:["https://epic7.gg"]},io=require("socket.io")(server,options),mongodb=require("./mongodb/connection.js"),queries=require("./mongodb/queries.js");mongodb.connect(),io.on("connection",n=>{console.log(n.id),n.on("createIntel",async()=>{var e=await queries.createIntel();n.emit("createIntelSuccess",e)}),n.on("findIntel",async e=>{e=await queries.findIntel(e);null!=e?n.emit("findIntelSuccess",e):n.emit("findIntelError","Intel not found or does not exist")}),n.on("createTower",async t=>{const e=await queries.findIntel(t.pageId);var o;"Stronghold"===t.location&&e.data.filter(e=>"Stronghold"===e.location).length<1?(o=await queries.createTower(t),io.sockets.emit("createTowerSuccess",o)):"Stronghold"!==t.location&&e.data.filter(e=>e.location===t.location).length<9&&!e.data.some(e=>e.name===t.name)?(o=await queries.createTower(t),io.sockets.emit("createTowerSuccess",o)):n.emit("createTowerError","Tower already exists")}),n.on("getStatistics",async()=>{var e=await queries.countTotalGuilds();sockets.emite("getStatisticsSuccess",e)}),n.on("updateCharacter",async e=>{e=await queries.updateTower(e);io.sockets.emit("updateCharacterSuccess",e)})}),server.listen(8080);const mongoose=require("mongoose");function connect(){mongoose.connect("mongodb://localhost/testdata",{useNewUrlParser:!0,useUnifiedTopology:!0,useCreateIndex:!0}),mongoose.connection.once("open",function(){console.log("Connection has been made.")}).on("error",function(e){console.log("Connection error:",e)})}mongoose.set("debug",!0),mongoose.Promise=global.Promise,module.exports={connect:connect};const mongoose=require("mongoose"),Schema=mongoose.Schema,CharacterSchema=new Schema({team:Number,name:String,hp:Number,speed:Number,artifact:String,notes:String}),TowerSchema=new Schema({location:String,name:String,characters:[CharacterSchema]}),GuildDataSchema=new Schema({pageId:{type:String,unique:!0},data:[TowerSchema]}),GuildData=mongoose.model("guilddata",GuildDataSchema);module.exports=GuildData;const GuildData=require("./guild-data.js");async function findIntel(e){return GuildData.findOne({pageId:e})}async function createIntel(){const e=new GuildData({pageId:Math.random().toString(36).slice(2)});return e.save()}async function createTower(e){return GuildData.findOneAndUpdate({pageId:e.pageId},{$push:{data:{name:e.name,location:e.location,characters:Array(6).fill({})}}},{new:!0})}async function updateTower(e){var t="data."+e.towerIndex+".characters."+e.characterIndex;return GuildData.findOneAndUpdate({pageId:e.pageId},{$set:{[t]:{team:e.teamIndex,name:e.characterName}}},{new:!0,upsert:!0})}async function countTotalGuilds(){return GuildData.count({})}module.exports={findIntel:findIntel,createIntel:createIntel,createTower:createTower,updateTower:updateTower,countTotalGuilds:countTotalGuilds};